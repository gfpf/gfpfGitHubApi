apply plugin: 'com.android.application'

android {
    signingConfigs {
        signature {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('/Users/Gus/Documents/android-projects/BeBlueGFPFTest/debug.keystore')
            storePassword '123456'
        }
    }
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId "com.beblue.gfpf.test.bebluegfpftest"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            // Run code coverage reports by default on debug builds.
            // testCoverageEnabled = true
            applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signature
        }
    }
    // Specifies flavor dimensions.
    flavorDimensions "default"
    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix ".mock.debug"
            versionNameSuffix "-mock-debug"
        }

        prod {
            applicationIdSuffix ".prod.debug"
            versionNameSuffix "-prod-debug"

            versionName "$defaultConfig.versionName" + ".test"
            /*resValue "string", "app_name", "App-Test"*/
            /*manifestPlaceholders =
                    [
                            appIcon: "@mipmap/ic_felix_the_cat"
                    ]*/
        }
    }
    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.android.material:material:1.2.0-alpha04'
    /*implementation 'com.android.support.constraint:constraint-layout:1.1.3'*/

    // Dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testImplementation "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
    testImplementation "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"

    //Dependencies for UI tests
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"

    // Room components
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    /*androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"*/

    //Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    //Picasso
    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    // OkHttp interceptors for logging
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.1'
    /*implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'*/

    // Retrofit and OkHttp
    implementation 'com.squareup.okhttp3:okhttp:4.4.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.4.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'com.github.stfalcon:frescoimageviewer:0.5.0'
    implementation 'com.facebook.fresco:fresco:1.12.1'
    implementation 'me.relex:photodraweeview:2.0.0'

    /*implementation 'com.github.chrisbanes:PhotoView:2.1.3'*/


}
